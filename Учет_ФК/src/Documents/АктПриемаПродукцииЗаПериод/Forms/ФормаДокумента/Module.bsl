
&НаКлиенте
Процедура ДобавитьДокументыЗаПериод(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		
		
		параметрыФормы = Новый Структура;
		параметрыФормы.Вставить("СкладПолучатель"	,Объект.Склад);
		параметрыФормы.Вставить("Организация"		,Объект.Организация);
		параметрыФормы.Вставить("РежимВыбора"		,Истина);
		параметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца"		,Истина);
		параметрыФормы.Вставить("ЗакрыватьПриВыборе"		,Ложь);
		ФормаВыбора = ПолучитьФорму("Документ.ПоступлениеПродукцииИзТранспортировки.ФормаВыбора",параметрыФормы,ЭтаФорма,,,);	
		ФормаВыбора.Открыть();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле = "Склад";
		Сообщение.ПутьКДанным = "Объект.Склад";
		Сообщение.Текст = "В документе не указан склад, подбор не возможен";
		Сообщение.Сообщить();
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоступленияДокуменПоступленияИзТранспортировкиПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ДокументыПоступления.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ДокументПоступления",ТекущаяСтрока.ДокуменПоступленияИзТранспортировки);
	ТекущаяСтрока.ВесПродукцииПоДокументу  = ПолучитьВесИзДокументаПоступления(СтруктураПараметров);
КонецПроцедуры

&НаСервере
Функция ПолучитьВесИзДокументаПоступления(СтрукутраПараметров)
	ИтоговыйВес = 0;
	ДокументПоступления = СтрукутраПараметров.ДокументПоступления;
	Если ЗначениеЗаполнено(ДокументПоступления) Тогда 
		ИтоговыйВес = ДокументПоступления.ОбщийВес;
	КонецЕсли;
	
	Возврат ИтоговыйВес;
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Документ.ПоступлениеПродукцииИзТранспортировки.Форма.ФормаВыбора" Тогда 
		СтруктураПоиска  = Новый Структура();
		СтруктураПоиска.Вставить("ДокуменПоступленияИзТранспортировки",ВыбранноеЗначение);
		
		НайденныеСтроки  = Объект.ДокументыПоступления.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			ДобавитьСтрокуДокументаНаСервере(СтруктураПоиска);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуДокументаНаСервере(СтруктураДанных)
	Если ЗначениеЗаполнено(СтруктураДанных.ДокуменПоступленияИзТранспортировки) Тогда
		НоваяСтрока = Объект.ДокументыПоступления.Добавить();
		НоваяСтрока.ДокуменПоступленияИзТранспортировки = СтруктураДанных.ДокуменПоступленияИзТранспортировки;
		НоваяСтрока.ВесПродукцииПоДокументу = НоваяСтрока.ДокуменПоступленияИзТранспортировки.ОбщийВес;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры




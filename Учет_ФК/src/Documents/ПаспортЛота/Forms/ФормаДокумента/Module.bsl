

&НаКлиенте
Процедура Подбор(Команда)
	
	параметрыФормы = Новый Структура;
	параметрыФормы.Вставить("РежимВыбора"		,Истина);
	параметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца"		,Истина);
	параметрыФормы.Вставить("ЗакрыватьПриВыборе"		,Ложь);
	ФормаВыбора = ПолучитьФорму("Справочник.ТранспортировочныеМеста.ФормаВыбора",параметрыФормы,ЭтаФорма,,,);
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.ТранспортировочныеМеста.Форма.ФормаВыбора" Тогда 
		СтруктураДанных  = Новый Структура();
		СтруктураДанных.Вставить("ВыбранноеЗначение",ВыбранноеЗначение);
		ДобавитьСтрокуНаСервере(СтруктураДанных);
		ПроизвестиРасчетНаКлиенте();
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ТранспортировкаПродукции.Форма.ФормаВыбора" Тогда 
		
		СтруктураДанных  = Новый Структура();
		СтруктураДанных.Вставить("ВыбранноеЗначение",ВыбранноеЗначение);
		
		
		ДобавитьСтрокиИзТранспортиртировкиНаСервере(СтруктураДанных);
		ПроизвестиРасчетНаКлиенте();
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ПродукцияПодбор.Доступность = Не ЭтаФорма.ТолькоПросмотр;
КонецПроцедуры


&НаКлиенте
Процедура ПродукцияТранспортировочноеМестоПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ТранспортировочноеМесто"	,СтрокаТабличнойЧасти.ТранспортировочноеМесто);
	СтруктураДанных.Вставить("Партия"					,ПредопределенноеЗначение("Справочник.ПартииПродукции.ПустаяСсылка"));
	СтруктураДанных.Вставить("ВесБруттоВлажный"			,0);
	СтруктураДанных.Вставить("ВесНеттоВлажный"			,0);
	СтруктураДанных.Вставить("ВесНеттоСухой"			,0);
	СтруктураДанных.Вставить("НомерПломбы"				,"");
	СтруктураДанных.Вставить("Au"						,0);
	СтруктураДанных.Вставить("Ag"						,0);
	СтруктураДанных.Вставить("Sобщ"						,0);
	СтруктураДанных.Вставить("Сорг"						,0);
	СтруктураДанных.Вставить("_As"						,0);
	СтруктураДанных.Вставить("Fe"						,0);
	
	ЗаполнитьСтруктуруДанныхВыпуска(СтруктураДанных);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтруктураДанных,,);
	ПроизвестиРасчетНаКлиенте();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруДанныхВыпуска(СтруктураДанных)
	Если СтруктураДанных.ТранспортировочноеМесто.Пустая() Тогда 
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЗатаркиТранспортировочныхМест.Партия КАК Партия,
		|	ЕСТЬNULL(ДанныеЗатаркиТранспортировочныхМест.НомерМеста, 0) КАК НомерМеста,
		|	ЕСТЬNULL(ДанныеЗатаркиТранспортировочныхМест.ВесБруттоВлажный, 0) КАК ВесБруттоВлажный,
		|	ЕСТЬNULL(ДанныеЗатаркиТранспортировочныхМест.ВесНеттоВлажный, 0) КАК ВесНеттоВлажный,
		|	ЕСТЬNULL(ДанныеЗатаркиТранспортировочныхМест.ВесНеттоСухой, 0) КАК ВесНеттоСухой,
		|	ЕСТЬNULL(ДанныеЗатаркиТранспортировочныхМест.НомерПломбы, """") КАК НомерПломбы,
		|	ЕСТЬNULL(ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.КоличествоAu, 0) КАК Au,
		|	ЕСТЬNULL(ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.КоличествоAg, 0) КАК Ag,
		|	ЕСТЬNULL(ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.КоличествоSобщ, 0) КАК Sобщ,
		|	ЕСТЬNULL(ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.КоличествоCорг, 0) КАК Cорг,
		|	ЕСТЬNULL(ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.КоличествоAs, 0) КАК _As,
		|	ЕСТЬNULL(ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.КоличествоFe, 0) КАК Fe
		|ИЗ
		|	РегистрСведений.ДанныеЗатаркиТранспортировочныхМест КАК ДанныеЗатаркиТранспортировочныхМест
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеСодержанияДМИПримесейВТранспортировочныхМестах КАК ДанныеСодержанияДМИПримесейВТранспортировочныхМестах
		|		ПО ДанныеЗатаркиТранспортировочныхМест.ТранспортировочноеМесто = ДанныеСодержанияДМИПримесейВТранспортировочныхМестах.ТранспортировочноеМесто
		|ГДЕ
		|	ДанныеЗатаркиТранспортировочныхМест.ТранспортировочноеМесто = &ТранспортировочноеМесто";
	
	Запрос.УстановитьПараметр("ТранспортировочноеМесто", СтруктураДанных.ТранспортировочноеМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СтруктураДанных.ВесБруттоВлажный 	= ВыборкаДетальныеЗаписи.ВесБруттоВлажный;
		СтруктураДанных.ВесНеттоВлажный 	= ВыборкаДетальныеЗаписи.ВесНеттоВлажный;
		СтруктураДанных.ВесНеттоСухой	 	= Окр(ВыборкаДетальныеЗаписи.ВесНеттоСухой,0,РежимОкругления.Окр15как20);
		СтруктураДанных.НомерПломбы 		= ВыборкаДетальныеЗаписи.НомерПломбы;
		СтруктураДанных.Партия 				= ВыборкаДетальныеЗаписи.Партия;
		СтруктураДанных.Au					= ВыборкаДетальныеЗаписи.Au/1000;
		СтруктураДанных.Ag					= ВыборкаДетальныеЗаписи.Ag/1000;
		СтруктураДанных.Sобщ				= ВыборкаДетальныеЗаписи.Sобщ/1000;
		СтруктураДанных.Сорг				= ВыборкаДетальныеЗаписи.Cорг/1000;
		СтруктураДанных._As					= ВыборкаДетальныеЗаписи._As/1000;
		СтруктураДанных.Fe					= ВыборкаДетальныеЗаписи.Fe/1000;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроизвестиРасчетНаКлиенте()
	Если Объект.Продукция.Количество() <> 0 и Объект.Продукция.Итог("ВесНеттоВлажный") <> 0 Тогда 
		Объект.Влажность 		= Окр(((Объект.Продукция.Итог("ВесНеттоВлажный") - Объект.Продукция.Итог("ВесНеттоСухой"))/Объект.Продукция.Итог("ВесНеттоВлажный")) *100,5,РежимОкругления.Окр15как20);
		Объект.СодержаниеAu 		= Окр(Объект.Продукция.Итог("Au")*1000000/Объект.Продукция.Итог("ВесНеттоСухой") ,1,РежимОкругления.Окр15как20);
		Объект.СодержаниеAg 		= Окр(Объект.Продукция.Итог("Ag")*1000000/Объект.Продукция.Итог("ВесНеттоСухой") ,1,РежимОкругления.Окр15как20);
		
		Объект.ПримесиAs 		= Окр(100*Объект.Продукция.Итог("_As") / (Объект.Продукция.Итог("ВесНеттоСухой")*0.001) ,1,РежимОкругления.Окр15как20);
		Объект.ПримесиCорг 		= Окр(100*Объект.Продукция.Итог("Сорг") / (Объект.Продукция.Итог("ВесНеттоСухой")*0.001) ,2,РежимОкругления.Окр15как20);
		Объект.ПримесиFe 		= Окр(100*Объект.Продукция.Итог("Fe") / (Объект.Продукция.Итог("ВесНеттоСухой")*0.001) ,1,РежимОкругления.Окр15как20);
		Объект.ПримесиSобщ		= Окр(100*Объект.Продукция.Итог("Sобщ") / (Объект.Продукция.Итог("ВесНеттоСухой")*0.001) ,1,РежимОкругления.Окр15как20);
	Иначе
		Объект.Влажность 		= 0;
		Объект.СодержаниеAu 	= 0;
		Объект.СодержаниеAg 	= 0;
		
		Объект.ПримесиAs 		= 0;
		Объект.ПримесиCорг 		= 0;
		Объект.ПримесиFe 		= 0;
		Объект.ПримесиSобщ		= 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПриИзменении(Элемент)
	ПроизвестиРасчетНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПослеУдаления(Элемент)
	ПроизвестиРасчетНаКлиенте();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуНаСервере(СтруктураДанных)
	ВыбранноеЗначение = СтруктураДанных.ВыбранноеЗначение;
	
	СтруктураПоиска = Новый Структура();
	СтруктураПоиска.Вставить("ТранспортировочноеМесто",ВыбранноеЗначение);
	НайденныеСтроки = ОБъект.Продукция.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.количество() = 0 Тогда 
		НоваяСтр = Объект.Продукция.Добавить();
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("ТранспортировочноеМесто"	,ВыбранноеЗначение);
		СтруктураДанных.Вставить("Партия"					,ПредопределенноеЗначение("Справочник.ПартииПродукции.ПустаяСсылка"));
		СтруктураДанных.Вставить("ВесБруттоВлажный"			,0);
		СтруктураДанных.Вставить("ВесНеттоВлажный"			,0);
		СтруктураДанных.Вставить("ВесНеттоСухой"			,0);
		СтруктураДанных.Вставить("НомерПломбы"				,"");
		СтруктураДанных.Вставить("Au"						,0);
		СтруктураДанных.Вставить("Ag"						,0);
		СтруктураДанных.Вставить("Sобщ"						,0);
		СтруктураДанных.Вставить("Сорг"						,0);
		СтруктураДанных.Вставить("_As"						,0);
		СтруктураДанных.Вставить("Fe"						,0);
		ЗаполнитьСтруктуруДанныхВыпуска(СтруктураДанных);
		ЗаполнитьЗначенияСвойств(НоваяСтр,СтруктураДанных,,);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиИзТранспортиртировкиНаСервере(СтруктураДанных)
	Для каждого СтрокатТч из СтруктураДанных.ВыбранноеЗначение.Продукция Цикл 
		СтруктураДляПередачи = Новый Структура();
		СтруктураДляПередачи.Вставить("ВыбранноеЗначение",СтрокатТч.ТранспортировочноеМесто);
		ДобавитьСтрокуНаСервере(СтруктураДляПередачи);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьИзТранспортировки(Команда)
	параметрыФормы = Новый Структура;
	параметрыФормы.Вставить("Организация"		,Объект.Организация);
	параметрыФормы.Вставить("РежимВыбора"		,Истина);
	параметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца"		,Истина);
	параметрыФормы.Вставить("ЗакрыватьПриВыборе"		,Ложь);
	ФормаВыбора = ПолучитьФорму("Документ.ТранспортировкаПродукции.ФормаВыбора",параметрыФормы,ЭтаФорма,,,);	
	ФормаВыбора.Открыть();
КонецПроцедуры

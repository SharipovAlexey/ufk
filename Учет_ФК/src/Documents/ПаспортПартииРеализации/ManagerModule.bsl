// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ПрограммныйИнтерфейс
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПаспортКачества";
	КомандаПечати.Представление = НСтр("ru = 'Паспорт партии продукции'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок       = 10;
КонецПроцедуры
#КонецОбласти

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПаспортКачества") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПаспортКачества", "Паспорт партии продукции",
			ПечатьПаспорта(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,);
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПечатьПаспорта(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортПартии";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПаспортПартииРеализации.MXL_ПаспортЛотаПродукции");
	
	ОбластьШапка 	= Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал 	= Макет.ПолучитьОбласть("Подвал");
	
	Для Каждого СсылкаНаОбъект Из МассивОбъектов Цикл 	
			
			
	    СтруктураДанныхДляПечати = новый Структура;
		
		СтруктураДанныхДляПечати.Вставить("ПредставлениеОрганизации"	,	СокрЛП(СсылкаНаОбъект.Организация.НаименованиеПолное));
		СтруктураДанныхДляПечати.Вставить("ДатаПаспорта"				, 	СсылкаНаОбъект.Дата);
		СтруктураДанныхДляПечати.Вставить("НомерПартии"					, 	СокрЛП(СсылкаНаОбъект.НомерПартии));
		СтруктураДанныхДляПечати.Вставить("ПредставлениеПроизводителя"	, 	pm_ОбщегоНазначения.ПредставлениеЮрЛица(СсылкаНаОбъект.Организация));
		СтруктураДанныхДляПечати.Вставить("Грузополучатель"				, 	pm_ОбщегоНазначения.ПредставлениеЮрЛица(СсылкаНаОбъект.Контрагент));
		СтруктураДанныхДляПечати.Вставить("Примечание"					, 	СокрЛП(СсылкаНаОбъект.Комментарий));
		
		СтруктураДанныхДляПечати.Вставить("Номенклатура"				, 	Константы.ОсновнаяНоменклатура.Получить());
		СтруктураДанныхДляПечати.Вставить("КоличествоМест"				, 	СсылкаНаОбъект.Продукция.Количество());
		СтруктураДанныхДляПечати.Вставить("ВесПартииБруттоВл"			, 	СсылкаНаОбъект.Продукция.Итог("ВесБруттоВлажный"));
		СтруктураДанныхДляПечати.Вставить("ВесПартииНеттоВл"			, 	СсылкаНаОбъект.Лоты.Итог("ВесНеттоВлажный"));
		СтруктураДанныхДляПечати.Вставить("Влажность"					, 	СсылкаНаОбъект.Влажность);
		СтруктураДанныхДляПечати.Вставить("ВесПартииСух"				, 	СсылкаНаОбъект.Продукция.Итог("ВесНеттоСухой"));
		СтруктураДанныхДляПечати.Вставить("СодAu"						, 	СсылкаНаОбъект.СодержаниеAu);
		СтруктураДанныхДляПечати.Вставить("СодAg"						, 	СсылкаНаОбъект.СодержаниеAg);
		СтруктураДанныхДляПечати.Вставить("Sобщ"						, 	СсылкаНаОбъект.ПримесиSобщ);
		СтруктураДанныхДляПечати.Вставить("Cорг"						, 	СсылкаНаОбъект.ПримесиCорг);
		СтруктураДанныхДляПечати.Вставить("СодAs"						, 	СсылкаНаОбъект.ПримесиAs);
		СтруктураДанныхДляПечати.Вставить("СодFe"						, 	СсылкаНаОбъект.ПримесиFe);
		СтруктураДанныхДляПечати.Вставить("ВсегоAu"						, 	ПолучитьВсегоМеталлаОкругленное(СсылкаНаОбъект,"Au"));
		СтруктураДанныхДляПечати.Вставить("ВсегоAg"						, 	ПолучитьВсегоМеталлаОкругленное(СсылкаНаОбъект,"Au"));
		СтруктураДанныхДляПечати.Вставить("ДатаОтгрузки"				, 	"");
		
		СтруктураДанныхДляПечати.Вставить("ОтклСодAu"					, 	СсылкаНаОбъект.ПоказательТочностиСодержанияAu);
		СтруктураДанныхДляПечати.Вставить("ОтклСодAg"					, 	СсылкаНаОбъект.ПоказательТочностиСодержанияAg);
		СтруктураДанныхДляПечати.Вставить("ОтклSобщ"					, 	СсылкаНаОбъект.ПоказательТочностиПримесиSобщ);
		СтруктураДанныхДляПечати.Вставить("ОтклCорг"					, 	СсылкаНаОбъект.ПоказательТочностиПримесиCорг);
		СтруктураДанныхДляПечати.Вставить("ОтклСодAs"					, 	СсылкаНаОбъект.ПоказательТочностиПрмесиAs);
		СтруктураДанныхДляПечати.Вставить("ОтклСодFe"					, 	СсылкаНаОбъект.ПоказательТочностиПрмесиFe);
		
		
		ОбластьШапка.Параметры.Заполнить(СтруктураДанныхДляПечати);
		ТабДокумент.Вывести(ОбластьШапка);
		НПП = 1;
		Для каждого СтрокаДанных из СсылкаНаОбъект.Лоты Цикл 
			
			СтруктураДанныхСтрокиДляПечати = новый Структура;
			
			СтруктураДанныхСтрокиДляПечати.Вставить("НПП"				, 	НПП);
			СтруктураДанныхСтрокиДляПечати.Вставить("НомерЛота"			, 	СтрокаДанных.Лот.НомерЛота);
			СтруктураДанныхСтрокиДляПечати.Вставить("Брутто"			, 	СтрокаДанных.ВесБруттоВлажный);
			СтруктураДанныхСтрокиДляПечати.Вставить("Нетто"				, 	СтрокаДанных.ВесНеттоВлажный);
			СтруктураДанныхСтрокиДляПечати.Вставить("НеттоПоСухому"		, 	СтрокаДанных.ВесНеттоСухой);
			
			СтруктураДанныхСтрокиДляПечати.Вставить("СодержаниеAu"		, 	СтрокаДанных.Лот.СодержаниеAu);
			СтруктураДанныхСтрокиДляПечати.Вставить("КоличествоAu"		, 	Окр(СтрокаДанных.Лот.Продукция.Итог("Au")*1000,1,РежимОкругления.Окр15как20));
			
			ОбластьСтрока.Параметры.Заполнить(СтруктураДанныхСтрокиДляПечати);
			НПП = НПП + 1;
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;

		СтруктураДанныхПодвалаДляПечати = новый Структура;
		СтруктураДанныхПодвалаДляПечати.Вставить("ВесПартииБруттоВл"				,СсылкаНаОбъект.лоты.Итог("ВесБруттоВлажный"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ВесПартииНеттоВл"					,СсылкаНаОбъект.Лоты.Итог("ВесНеттоВлажный"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ВесПартииНеттоСух"				,СсылкаНаОбъект.Лоты.Итог("ВесНеттоСухой"));
		СтруктураДанныхПодвалаДляПечати.Вставить("СреднееСодержаниеПартии"			,СсылкаНаОбъект.СодержаниеAu);
		СтруктураДанныхПодвалаДляПечати.Вставить("ВсегоAuПартии"					,ПолучитьВсегоМеталлаОкругленное(СсылкаНаОбъект,"Au"));
		
		СтруктураДанныхПодвалаДляПечати.Вставить("ДолжностьНачальнОТК"				,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаНачальнОТК,"ДолжностьНачальнОТК"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ДолжностьЗаведующийЛабораторией"	,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаЗаведующийЛабораторией,"ДолжностьЗаведующийЛабораторией"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ФИОНачальникаОТК"					,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаНачальнОТК));
		СтруктураДанныхПодвалаДляПечати.Вставить("ФИОЗавЛабораторией"				,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаЗаведующийЛабораторией));
		
				
		ОбластьПодвал.Параметры.Заполнить(СтруктураДанныхПодвалаДляПечати);
		ТабДокумент.Вывести(ОбластьПодвал);
		ТабДокумент.ОтображатьСетку = Ложь;
		ТабДокумент.ТолькоПросмотр = Истина;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
	КонецЦикла;
		
	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьВсегоМеталлаОкругленное(ДокументПаспорта,Металл = "Au")
	ВсегоМеталла = 0;
	
	Для Каждого СтрокаЛота из ДокументПаспорта.Лоты Цикл 
		ВсегоМеталла = ВсегоМеталла + Окр(СтрокаЛота.Лот.Продукция.Итог(Металл)*1000,1,РежимОкругления.Окр15как20);
	КонецЦикла;
	
	Возврат ВсегоМеталла;
КонецФункции

Функция НаименованиеСотрудникаДолжностиДляВизы(Сотрудник, ПараметрДолжность = "")
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда 
		Если ПараметрДолжность = "ДолжностьНачальнОТК" Тогда 
			Возврат "Начальник отдела технического контроля";
		ИначеЕсли ПараметрДолжность = "ДолжностьЗаведующийЛабораторией" Тогда
			Возврат "Начальник заводской пробирно-аналитической лаборатории";
		КонецЕсли;
	Иначе	
		Если НЕ ЗначениеЗаполнено(ПараметрДолжность) Тогда
			Если СтрДлина(СокрЛП(Сотрудник.ПредставлениеДляПечати))>0 Тогда
				Возврат СокрЛП(Сотрудник.ПредставлениеДляПечати);
			Иначе 
				Возврат СокрЛП(Сотрудник.Наименование);
			КонецЕсли;
		Иначе 
			Если ПараметрДолжность = "ДолжностьНачальнОТК" Тогда 
				Возврат Сотрудник.Должность.Наименование;
			ИначеЕсли ПараметрДолжность = "ДолжностьЗаведующийЛабораторией" Тогда
				Возврат Сотрудник.Должность.Наименование;
			КонецЕсли;
       	КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

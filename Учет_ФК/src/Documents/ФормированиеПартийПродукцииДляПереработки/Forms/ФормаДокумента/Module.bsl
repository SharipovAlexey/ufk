
&НаКлиенте
Процедура ДобавитьДокументыЗаПериод(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПодборИзПоступления(Команда)
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		
		
		параметрыФормы = Новый Структура;
		параметрыФормы.Вставить("СкладПолучатель"	,Объект.Склад);
		параметрыФормы.Вставить("Организация"		,Объект.Организация);
		параметрыФормы.Вставить("РежимВыбора"		,Истина);
		параметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца"		,Истина);
		параметрыФормы.Вставить("ЗакрыватьПриВыборе"		,Ложь);
		ФормаВыбора = ПолучитьФорму("Документ.ПоступлениеПродукцииИзТранспортировки.ФормаВыбора",параметрыФормы,ЭтаФорма,,,);	
		ФормаВыбора.Открыть();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле = "Склад";
		Сообщение.ПутьКДанным = "Объект.Склад";
		Сообщение.Текст = "В документе не указан склад, подбор не возможен";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоступленияДокуменПоступленияИзТранспортировкиПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ДокументыПоступления.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ДокументПоступления",ТекущаяСтрока.ДокуменПоступленияИзТранспортировки);
	ТекущаяСтрока.ВесПродукцииПоДокументу  = ПолучитьВесИзДокументаПоступления(СтруктураПараметров);
КонецПроцедуры

&НаСервере
Функция ПолучитьВесИзДокументаПоступления(СтрукутраПараметров)
	ИтоговыйВес = 0;
	ДокументПоступления = СтрукутраПараметров.ДокументПоступления;
	Если ЗначениеЗаполнено(ДокументПоступления) Тогда 
		ИтоговыйВес = ДокументПоступления.ОбщийВес;
	КонецЕсли;
	
	Возврат ИтоговыйВес;
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Документ.ПоступлениеПродукцииИзТранспортировки.Форма.ФормаВыбора" Тогда 
		СтруктураДанных  = Новый Структура();
		СтруктураДанных.Вставить("ДокуменПоступленияИзТранспортировки",ВыбранноеЗначение);
		ДобавитьСтрокиДокументаПоПоступлениюНаСервере(СтруктураДанных);
	КонецЕсли;
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.ТранспортировочныеМеста.Форма.ФормаВыбора" Тогда 
		СтруктураДанных  = Новый Структура();
		СтруктураДанных.Вставить("ВыбранноеЗначение",ВыбранноеЗначение);
		ДобавитьСтрокуНаСервере(СтруктураДанных);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуНаСервере(СтруктураДанных)
	ВыбранноеЗначение = СтруктураДанных.ВыбранноеЗначение;
	
	СтруктураПоиска = Новый Структура();
	СтруктураПоиска.Вставить("ТранспортировочноеМесто",ВыбранноеЗначение);
	НайденныеСтроки = Объект.Продукция.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.количество() = 0 Тогда 
		НоваяСтр = Объект.Продукция.Добавить();
		НоваяСтр.ТранспортировочноеМесто = ВыбранноеЗначение;
		
		СтруктураДанных = pm_ОбщегоНазначения.ПолучитьДанныеТранспортировочногоМеста(ВыбранноеЗначение);
		ЗаполнитьЗначенияСвойств(НоваяСтр,СтруктураДанных,"ПартияПродукции,ВесБруттоВлажный,ВесНеттоВлажный,НомерПломбы,НомерМестаВПартии");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиДокументаПоПоступлениюНаСервере(СтруктураДанных)
	ДокументПоступления = СтруктураДанных.ДокуменПоступленияИзТранспортировки;
	Для Каждого СтрокаПоступления из ДокументПоступления.Продукция Цикл 
		струкутраПоиска = Новый Структура("ТранспортировочноеМесто",СтрокаПоступления.ТранспортировочноеМесто);
		найденныеСтроки = Объект.Продукция.НайтиСтроки(струкутраПоиска);
		Если найденныеСтроки.Количество() <> 0  Тогда Продолжить; КонецЕсли;
		НоваяСтрока = Объект.Продукция.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПоступления);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияТранспортировочноеМестоПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ТранспортировочноеМесто",СтрокаТабличнойЧасти.ТранспортировочноеМесто);
	СтруктураДанных.Вставить("ПартияПродукции","");
	СтруктураДанных.Вставить("ВесБруттоВлажный",0);
	СтруктураДанных.Вставить("ВесНеттоВлажный",0);
	СтруктураДанных.Вставить("НомерПломбы","");
	СтруктураДанных.Вставить("НомерМестаВПартии",0);
	
	ЗаполнитьСтруктуруДанныхНаСервере(СтруктураДанных);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтруктураДанных,"ПартияПродукции,ВесБруттоВлажный,ВесНеттоВлажный,НомерПломбы,НомерМестаВПартии");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруДанныхНаСервере(СтруктураДанных)
	Если СтруктураДанных.ТранспортировочноеМесто.Пустая() Тогда 
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЗатаркиТранспортировочныхМест.Партия КАК Партия,
		|	ДанныеЗатаркиТранспортировочныхМест.ВесБруттоВлажный КАК ВесБруттоВлажный,
		|	ДанныеЗатаркиТранспортировочныхМест.ВесНеттоВлажный КАК ВесНеттоВлажный,
		|	ДанныеЗатаркиТранспортировочныхМест.НомерПломбы КАК НомерПломбы,
		|	ДанныеЗатаркиТранспортировочныхМест.НомерМеста КАК НомерМеста
		|ИЗ
		|	РегистрСведений.ДанныеЗатаркиТранспортировочныхМест КАК ДанныеЗатаркиТранспортировочныхМест
		|ГДЕ
		|	ДанныеЗатаркиТранспортировочныхМест.ТранспортировочноеМесто = &ТранспортировочноеМесто";
	
	Запрос.УстановитьПараметр("ТранспортировочноеМесто", СтруктураДанных.ТранспортировочноеМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СтруктураДанных.ПартияПродукции 	= ВыборкаДетальныеЗаписи.Партия;
		СтруктураДанных.ВесБруттоВлажный 	= ВыборкаДетальныеЗаписи.ВесБруттоВлажный;
		СтруктураДанных.ВесНеттоВлажный 	= ВыборкаДетальныеЗаписи.ВесНеттоВлажный;
		СтруктураДанных.НомерПломбы 		= ВыборкаДетальныеЗаписи.НомерПломбы;
		СтруктураДанных.НомерМестаВПартии 	= ВыборкаДетальныеЗаписи.НомерМеста;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	параметрыФормы = Новый Структура;
	параметрыФормы.Вставить("РежимВыбора"		,Истина);
	параметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца"		,Истина);
	параметрыФормы.Вставить("ЗакрыватьПриВыборе"		,Ложь);
	ФормаВыбора = ПолучитьФорму("Справочник.ТранспортировочныеМеста.ФормаВыбора",параметрыФормы,ЭтаФорма,,,);
	ФормаВыбора.Открыть();

КонецПроцедуры




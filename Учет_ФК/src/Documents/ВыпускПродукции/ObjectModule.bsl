
Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ДанныеЗатаркиТранспортировочныхМест.Записывать = Истина;
	Для Каждого ТекСтрокаТранспортировочныеМеста Из ТранспортировочныеМеста Цикл
		Движение = Движения.ДанныеЗатаркиТранспортировочныхМест.Добавить();
		Движение.ТранспортировочноеМесто = ТекСтрокаТранспортировочныеМеста.ТранспортировочноеМесто;
		Движение.Партия = Партия;
		Движение.ВесБруттоВлажный = ТекСтрокаТранспортировочныеМеста.ВесБруттоВлажный;
		Движение.ВесНеттоВлажный = ТекСтрокаТранспортировочныеМеста.ВесНеттоВлажный;
		Движение.ВесНеттоСухой = ТекСтрокаТранспортировочныеМеста.ВесНеттоСухой;
		Движение.НомерПломбы = ТекСтрокаТранспортировочныеМеста.НомерПломбы;
		Движение.Влажность = Влажность;
		Движение.НомерМеста = ТекСтрокаТранспортировочныеМеста.НомерМестаВПартии;
	КонецЦикла;

	Движения.ОстаткиПродукцииНаСкладе.Записывать = Истина;
	Для Каждого ТекСтрокаТранспортировочныеМеста Из ТранспортировочныеМеста Цикл
		Движение = Движения.ОстаткиПродукцииНаСкладе.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Склад = Склад;
		Движение.ПартияПродукции = Партия;
		Движение.Номенклатура = Партия.Номенклатура;
		Движение.СостояниеХраниния = Перечисления.СостоянияХранения.Хранение;
		Движение.ТранспортировочноеМесто = ТекСтрокаТранспортировочныеМеста.ТранспортировочноеМесто;
		
		Движение.КоличествоМест 	= 1;
		Движение.Количество 		= ТекСтрокаТранспортировочныеМеста.ВесНеттоСухой;
		Движение.ВесНеттоСухой 		= ТекСтрокаТранспортировочныеМеста.ВесНеттоСухой;
		Движение.ВесНеттоВлажный 	= ТекСтрокаТранспортировочныеМеста.ВесНеттоВлажный;
		Движение.ВесБруттоВлажный 	= ТекСтрокаТранспортировочныеМеста.ВесБруттоВлажный;
		
	КонецЦикла;
	
	Движения.ВыпускПродукции.Записывать = Истина;
	Движение 					= Движения.ВыпускПродукции.Добавить();
	Движение.Активность 		= Истина;
	Движение.Период 			= Дата;
	Движение.Номенклатура 		= Партия.Номенклатура;
	Движение.Организация 		= Организация;
	Движение.ПартияПродукции 	= Партия;
	Движение.Количество 		= ТранспортировочныеМеста.Итог("ВесНеттоСухой");
	Движение.ВесНеттоСухой 		= ТранспортировочныеМеста.Итог("ВесНеттоСухой");
	Движение.ВесБруттоВлажный 	= ТранспортировочныеМеста.Итог("ВесБруттоВлажный");
	Движение.ВесНеттоВлажный	= ТранспортировочныеМеста.Итог("ВесНеттоВлажный");
	Движение.Влажность 			= Влажность;
	Движение.МестВПартии		= ТранспортировочныеМеста.Количество();
	
	Для Каждого ТекСтрокаТранспортировочныеМеста Из ТранспортировочныеМеста Цикл
		ТрМестоОбъект = ТекСтрокаТранспортировочныеМеста.ТранспортировочноеМесто.ПолучитьОбъект();
		ИДТранспортировочногоМеста = Партия.Код + "."+Формат(ТекСтрокаТранспортировочныеМеста.НомерМестаВПартии,"ЧЦ=3; ЧВН=") + "."+Формат(ТекСтрокаТранспортировочныеМеста.ВесБруттоВлажный,"ЧЦ=4; ЧДЦ=0; ЧВН=; ЧГ=0");
		ИДТранспортировочногоМеста1 = Партия.Код + "."+Формат(ТекСтрокаТранспортировочныеМеста.НомерМестаВПартии,"ЧЦ=3; ЧВН=");
		
		ТрМестоОбъект.ИдентификаторТранспортировочногоМеста = ИДТранспортировочногоМеста;
		ТрМестоОбъект.ИдентификаторТранспортировочногоМеста1 = ИДТранспортировочногоМеста1;
		Попытка
			ТрМестоОбъект.Заблокировать();
			ТрМестоОбъект.ОбменДанными.Загрузка = Истина;
			ТрМестоОбъект.Записать();
		Исключение	
			ТекстСообщения = "Не удалось заблокировать транспортировочное место из строки № "+ ТекСтрокаТранспортировочныеМеста.НомерСтроки;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "", "Объект", Отказ);
			Отказ = Истина;	
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Для Каждого ТекСтрокаТранспортировочныеМеста Из ТранспортировочныеМеста Цикл
		ТрМестоОбъект = ТекСтрокаТранспортировочныеМеста.ТранспортировочноеМесто.ПолучитьОбъект();
		ТрМестоОбъект.ИдентификаторТранспортировочногоМеста = "";
		ТрМестоОбъект.ИдентификаторТранспортировочногоМеста1 = "";
		Попытка
			ТрМестоОбъект.Заблокировать();
			ТрМестоОбъект.ОбменДанными.Загрузка = Истина;
			ТрМестоОбъект.Записать();
		Исключение	
			ТекстСообщения = "Не удалось заблокировать транспортировочное место из строки № "+ ТекСтрокаТранспортировочныеМеста.НомерСтроки;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "", "Объект", Отказ);
			Отказ = Истина;	
		КонецПопытки;
		
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если Партия.ОбщийВесБруттоПартииВлажный <>  ТранспортировочныеМеста.Итог("ВесБруттоВлажный") Тогда 
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Общий вес продукции, указанный в партии не соответствует весу продукции
								|упакованному в транспортировочные места.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "", "Объект", Отказ);
	КонецЕсли;
	
	Если Партия.ОбщийВесНеттоПартииВлажный <>  ТранспортировочныеМеста.Итог("ВесНеттоВлажный") Тогда 
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Общий вес нетто продукции, указанный в партии не соответствует весу нетто продукции
								|упакованному в транспортировочные места.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "", "Объект", Отказ);
	КонецЕсли;
	
	Если НачалоДня(Дата) <> НачалоДня(Партия.ДатаВыпуска) Тогда 
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Дата выпуска партии продукции отличается от даты документа.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "", "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию(ПараметрыСеанса.ТекущийПользователь.Наименование);
	Склад = Справочники.Склады.СкладПоУмолчанию(ПараметрыСеанса.ТекущийПользователь.Наименование);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры



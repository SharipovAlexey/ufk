
&НаКлиенте
Процедура ПродукцияТранспортировочноеМестоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ТранспортировочноеМесто",СтрокаТабличнойЧасти.ТранспортировочноеМесто);
	СтруктураДанных.Вставить("ПартияПродукции","");
	СтруктураДанных.Вставить("ВесБруттоВлажный",0);
	СтруктураДанных.Вставить("ВесНеттоВлажный",0);
	СтруктураДанных.Вставить("НомерПломбы","");
	СтруктураДанных.Вставить("НомерМестаВПартии",0);
	
	ЗаполнитьСтруктуруДанныхНаСервере(СтруктураДанных);
	
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтруктураДанных,"ВесБруттоВлажный,ВесНеттоВлажный,НомерПломбы,НомерМестаВПартии");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруДанныхНаСервере(СтруктураДанных)
	Если СтруктураДанных.ТранспортировочноеМесто.Пустая() Тогда 
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЗатаркиТранспортировочныхМест.Партия КАК Партия,
		|	ДанныеЗатаркиТранспортировочныхМест.ВесБруттоВлажный КАК ВесБруттоВлажный,
		|	ДанныеЗатаркиТранспортировочныхМест.ВесНеттоВлажный КАК ВесНеттоВлажный,
		|	ДанныеЗатаркиТранспортировочныхМест.НомерПломбы КАК НомерПломбы,
		|	ДанныеЗатаркиТранспортировочныхМест.НомерМеста КАК НомерМеста
		|ИЗ
		|	РегистрСведений.ДанныеЗатаркиТранспортировочныхМест КАК ДанныеЗатаркиТранспортировочныхМест
		|ГДЕ
		|	ДанныеЗатаркиТранспортировочныхМест.ТранспортировочноеМесто = &ТранспортировочноеМесто";
	
	Запрос.УстановитьПараметр("ТранспортировочноеМесто", СтруктураДанных.ТранспортировочноеМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СтруктураДанных.ПартияПродукции 	= ВыборкаДетальныеЗаписи.Партия;
		СтруктураДанных.ВесБруттоВлажный 	= ВыборкаДетальныеЗаписи.ВесБруттоВлажный;
		СтруктураДанных.ВесНеттоВлажный 	= ВыборкаДетальныеЗаписи.ВесНеттоВлажный;
		СтруктураДанных.НомерПломбы 		= ВыборкаДетальныеЗаписи.НомерПломбы;
		СтруктураДанных.НомерМестаВПартии 	= ВыборкаДетальныеЗаписи.НомерМеста;
	КонецЕсли;
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокуменНаоснованииНаСервере()
	Если ЗначениеЗаполнено(Объект.ДокументОтгрузки) Тогда 
		Объект.Продукция.Очистить();
		ДокументОтгрузки = Объект.ДокументОтгрузки;
		Объект.Склад 				= ДокументОтгрузки.Склад;
		Объект.СкладПолучатель 		= ДокументОтгрузки.СкладПолучатель;
		Объект.Грузоперевозчик 		= ДокументОтгрузки.Грузоперевозчик;
		Объект.ТранспортноеСредство = ДокументОтгрузки.ТранспортноеСредство;
		Для каждого СтрокаТаблицы из ДокументОтгрузки.Продукция Цикл 
			НовСтрока = Объект.Продукция.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,СтрокаТаблицы);
			НовСтрока.ОтметкаОПолучении = Истина;
		КонецЦикла;   
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШапкуДокументаНаОснованииНаСервере()
	Если ЗначениеЗаполнено(Объект.ДокументОтгрузки) Тогда 
		ДокументОтгрузки = Объект.ДокументОтгрузки;
		Объект.Склад 				= ДокументОтгрузки.Склад;
		Объект.СкладПолучатель 		= ДокументОтгрузки.СкладПолучатель;
		Объект.Грузоперевозчик 		= ДокументОтгрузки.Грузоперевозчик;
		Объект.ТранспортноеСредство = ДокументОтгрузки.ТранспортноеСредство;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументОтгрузкиПриИзменении(Элемент)
	
	ТекстВопроса = НСтр("ru = 'Запоплнить табличную часть документа на основании отгрузки?'");
	Оповещение = Новый ОписаниеОповещения("ВопросЗаполнениеЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокуменНаоснованииНаСервере();
	Иначе
		ЗаполнитьШапкуДокументаНаОснованииНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	//Для оповещения формы списка документа "Транспортировка продукции", там выведены документы введенные на основании.
	Если НЕ Объект.ДокументОтгрузки.Пустая() Тогда
		ОповеститьОбИзменении(Объект.ДокументОтгрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыПодбора(ИмяТаблицы)
	
	ДатаРасчетов 	 = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);
	
	ЗаголовокПодбора = НСтр("ru = 'Подбор транспортировочных мест в %1 (%2)'");
	ПредставлениеТаблицы = НСтр("ru = 'Список продукции'");
	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, Объект.Ссылка, НСтр("ru = 'Список продукции'"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЕстьКоличество", Истина);
	ПараметрыФормы.Вставить("ДатаРасчетов"  , ДатаРасчетов);
	ПараметрыФормы.Вставить("Склад"         , Объект.СкладПолучатель);
	ПараметрыФормы.Вставить("Заголовок"     , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ВидПодбора"    , ПолучитьВидПодбора(ИмяТаблицы));
	ПараметрыФормы.Вставить("ИмяТаблицы"    , ИмяТаблицы);
	ПараметрыФормы.Вставить("Организация"   ,Объект.Организация);
	ПараметрыФормы.Вставить("ПоказыватьОстатки"  , Истина);
	
	Возврат ПараметрыФормы;
КонецФункции

&НаКлиенте
Функция ПолучитьВидПодбора(ИмяТаблицы)
	
	ВидПодбора = "";
	
	Возврат ВидПодбора;
	
КонецФункции

&НаКлиенте
Процедура Подбор(Команда)
	ПараметрыПодбора = ПолучитьПараметрыПодбора("Продукция");
	Если ПараметрыПодбора <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПодборТранспортировочногоМеста.Форма.Форма", ПараметрыПодбора, ЭтотОбъект, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТранспортировочногоМеста.Форма.Форма" 
		ИЛИ ИсточникВыбора.ИмяФормы = "Обработка.ПодборТранспортировочногоМестаИзТранспортировки.Форма.Форма" Тогда
		ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИсточникВыбора.ИмяТаблицы);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборВставкаИзБуфераНаСервере(ВыбранноеЗначение, ИмяТаблицы)

	ТаблицаДанных = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобранныхПозицийВХранилище);
	
	Для каждого СтрокаДанных из ТаблицаДанных Цикл 
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ТранспортировочноеМесто",СтрокаДанных.ТранспортировочноеМесто);
		СтруктураПоиска.Вставить("ПартияПродукции",СтрокаДанных.ПартияПродукции);
		массивНайденныхСтрок = Объект.Продукция.НайтиСтроки(СтруктураПоиска);
		
		Если массивНайденныхСтрок.Количество() <> 0 Тогда 
			//такое место в документе уже есть, повторно не добавляем
			Продолжить;			
		КонецЕсли;
		НовСтрока = Объект.Продукция.Добавить();
		НовСтрока.ОтметкаОПолучении = Истина;
		ЗаполнитьЗначенияСвойств(НовСтрока,СтрокаДанных,,"НомерСтроки");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыПодбораИзТранспортировки(ИмяТаблицы)
	
	ДатаРасчетов 	 = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);
	
	ЗаголовокПодбора = НСтр("ru = 'Подбор транспортировочных мест в %1 (%2)'");
	ПредставлениеТаблицы = НСтр("ru = 'Список продукции'");
	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, Объект.Ссылка, НСтр("ru = 'Список продукции'"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаРасчетов"  , ДатаРасчетов);
	ПараметрыФормы.Вставить("Заголовок"     , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ИмяТаблицы"    , ИмяТаблицы);
	ПараметрыФормы.Вставить("ДокументТранспортировки"    , Объект.ДокументОтгрузки);
	
	Возврат ПараметрыФормы;
КонецФункции


&НаКлиенте
Процедура ПодобратьИзДокументаТранспортировки(Команда)
	ПараметрыПодбора = ПолучитьПараметрыПодбораИзТранспортировки("Продукция");
	Если ПараметрыПодбора <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПодборТранспортировочногоМестаИзТранспортировки.Форма.Форма", ПараметрыПодбора, ЭтотОбъект, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

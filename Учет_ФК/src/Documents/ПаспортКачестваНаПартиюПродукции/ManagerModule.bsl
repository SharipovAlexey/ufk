#Область ПрограммныйИнтерфейс
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//паспорт качества
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПаспортКачества";
	КомандаПечати.Представление = НСтр("ru = 'Паспорт качества'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок       = 10;
	
КонецПроцедуры
#КонецОбласти


// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПаспортКачества") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПаспортКачества",
			"Паспорт качества на партию продукции", pm_ПечатьПаспорта(МассивОбъектов, ОбъектыПечати),,);
				
	КонецЕсли;			
	
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры 

Функция pm_ПечатьПаспорта(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортПартии";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПаспортКачестваНаПартиюПродукции.MXL_ПаспортКачестваПродукции");
////	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
////	
////	
//	СкладПечати = 0;
////	
	Для каждого СсылкаНаОбъект из МассивОбъектов Цикл 
	    СтруктураДанныхДляПечати = новый Структура;
		//СтруктураДанныхДляПечати.Вставить("ПредставлениеДоговора"		, 	pm_ОбщегоНазначения.ПолучитьПредставлениеДоговораКонтрагента(СсылкаНаОбъект.ДоговорГрузоперевозчика));
		СтруктураДанныхДляПечати.Вставить("ПредставлениеОрганизации"	,	СокрЛП(СсылкаНаОбъект.Организация.НаименованиеПолное));
		СтруктураДанныхДляПечати.Вставить("НомерПартии"					,	СсылкаНаОбъект.ДокументВыпуска.Партия.Код);	
		СтруктураДанныхДляПечати.Вставить("ДатаПаспорта"				, 	СсылкаНаОбъект.Дата);
		СтруктураДанныхДляПечати.Вставить("ПредставлениеПроизводителя"	, 	pm_ОбщегоНазначения.ПредставлениеЮрЛица(СсылкаНаОбъект.Организация));
		
		СтруктураДанныхДляПечати.Вставить("Номенклатура"				, 	СсылкаНаОбъект.ДокументВыпуска.Партия.Номенклатура);
		СтруктураДанныхДляПечати.Вставить("ДатаИзготовления"			, 	СсылкаНаОбъект.ДокументВыпуска.Дата);
		СтруктураДанныхДляПечати.Вставить("КоличествоМест"				, 	СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Количество());
		СтруктураДанныхДляПечати.Вставить("ВесПартииБруттоВл"			, 	СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесБруттоВлажный"));
		СтруктураДанныхДляПечати.Вставить("ВесПартииНеттоВл"			, 	СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесНеттоВлажный"));
		СтруктураДанныхДляПечати.Вставить("Влажность"					, 	СсылкаНаОбъект.ДокументВыпуска.Влажность);
		СтруктураДанныхДляПечати.Вставить("ВесПартииСух"				, 	СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесНеттоСухой"));
		СтруктураДанныхДляПечати.Вставить("СодAu"						, 	СсылкаНаОбъект.ДокументИсследования.СодержаниеAu);
		СтруктураДанныхДляПечати.Вставить("ОтклСодAu"					, 	СсылкаНаОбъект.ДокументИсследования.ПоказательТочностиСодержанияAu);
		СтруктураДанныхДляПечати.Вставить("СодAg"						, 	СсылкаНаОбъект.ДокументИсследования.СодержаниеAg);
		СтруктураДанныхДляПечати.Вставить("ОтклСодAg"					, 	СсылкаНаОбъект.ДокументИсследования.ПоказательТочностиСодержанияAg);
		СтруктураДанныхДляПечати.Вставить("Sобщ"						, 	СсылкаНаОбъект.ДокументИсследования.ПримесиSобщ);
		СтруктураДанныхДляПечати.Вставить("ОтклSобщ"					, 	СсылкаНаОбъект.ДокументИсследования.ПоказательТочностиПримесиSобщ);
		СтруктураДанныхДляПечати.Вставить("Cорг"						, 	СсылкаНаОбъект.ДокументИсследования.ПримесиCорг);
		СтруктураДанныхДляПечати.Вставить("ОтклCорг"					, 	СсылкаНаОбъект.ДокументИсследования.ПоказательТочностиПримесиCорг);
		СтруктураДанныхДляПечати.Вставить("СодAs"						, 	СсылкаНаОбъект.ДокументИсследования.ПримесиAs);
		СтруктураДанныхДляПечати.Вставить("ОтклСодAs"					, 	СсылкаНаОбъект.ДокументИсследования.ПоказательТочностиПрмесиAs);
		СтруктураДанныхДляПечати.Вставить("СодFe"						, 	СсылкаНаОбъект.ДокументИсследования.ПримесиFe);
		СтруктураДанныхДляПечати.Вставить("ОтклСодFe"					, 	СсылкаНаОбъект.ДокументИсследования.ПоказательТочностиПрмесиFe);
		СтруктураДанныхДляПечати.Вставить("ВсегоAu"						, 	СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесНеттоСухой")/1000* СсылкаНаОбъект.ДокументИсследования.СодержаниеAu);
		СтруктураДанныхДляПечати.Вставить("ВсегоAg"						, 	СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесНеттоСухой")/1000* СсылкаНаОбъект.ДокументИсследования.СодержаниеAg);
		СтруктураДанныхДляПечати.Вставить("ДатаОтгрузки"				, 	"");
		СтруктураДанныхДляПечати.Вставить("Примечание"					, 	СокрЛП(СсылкаНаОбъект.Комментарий));
		СтруктураДанныхДляПечати.Вставить("Грузополучатель"				, 	pm_ОбщегоНазначения.ПредставлениеЮрЛица(СсылкаНаОбъект.Контрагент));
		
		
		ОбластьШапка.Параметры.Заполнить(СтруктураДанныхДляПечати);
		ТабДокумент.Вывести(ОбластьШапка);
		НПП = 1;
		Для каждого СтрокаДанных из СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста Цикл 
			
			СтруктураДанныхСтрокиДляПечати = новый Структура;
			
			СтруктураДанныхСтрокиДляПечати.Вставить("НПП"				, 	СтрокаДанных.НомерМестаВПартии);
			СтруктураДанныхСтрокиДляПечати.Вставить("брутто"			, 	СтрокаДанных.ВесБруттоВлажный);
			СтруктураДанныхСтрокиДляПечати.Вставить("нетто"				, 	СтрокаДанных.ВесНеттоВлажный);
			СтруктураДанныхСтрокиДляПечати.Вставить("НомерПломбы"		, 	СтрокаДанных.НомерПломбы);
			
			ОбластьСтрока.Параметры.Заполнить(СтруктураДанныхСтрокиДляПечати);
			НПП = НПП + 1;
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		СтруктураДанныхПодвалаДляПечати = новый Структура;
		СтруктураДанныхПодвалаДляПечати.Вставить("ДолжностьНачальнОТК"				,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаНачальнОТК,"ДолжностьНачальнОТК"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ДолжностьЗаведующийЛабораторией"	,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаЗаведующийЛабораторией,"ДолжностьЗаведующийЛабораторией"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ФИОНачальникаОТК"					,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаНачальнОТК));
		СтруктураДанныхПодвалаДляПечати.Вставить("ФИОЗавЛабораторией"				,НаименованиеСотрудникаДолжностиДляВизы(СсылкаНаОбъект.ВизаЗаведующийЛабораторией));
		                                                                             		
		СтруктураДанныхПодвалаДляПечати.Вставить("ВесПартииБруттоВл"				,СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесБруттоВлажный"));
		СтруктураДанныхПодвалаДляПечати.Вставить("ВесПартииНеттоВл"					,СсылкаНаОбъект.ДокументВыпуска.ТранспортировочныеМеста.Итог("ВесНеттоВлажный"));
				
		ОбластьПодвал.Параметры.Заполнить(СтруктураДанныхПодвалаДляПечати);
		ТабДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	ТабДокумент.ТолькоПросмотр = Истина;
	
	Возврат ТабДокумент;
КонецФункции

Функция НаименованиеСотрудникаДолжностиДляВизы(Сотрудник, ПараметрДолжность = "")
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда 
		Если ПараметрДолжность = "ДолжностьНачальнОТК" Тогда 
			Возврат "Начальник отдела технического контроля";
		ИначеЕсли ПараметрДолжность = "ДолжностьЗаведующийЛабораторией" Тогда
			Возврат "Начальник заводской пробирно-аналитической лаборатории";
		КонецЕсли;
	Иначе	
		Если НЕ ЗначениеЗаполнено(ПараметрДолжность) Тогда
			Если СтрДлина(СокрЛП(Сотрудник.ПредставлениеДляПечати))>0 Тогда
				Возврат СокрЛП(Сотрудник.ПредставлениеДляПечати);
			Иначе 
				Возврат СокрЛП(Сотрудник.Наименование);
			КонецЕсли;
		Иначе 
			Если ПараметрДолжность = "ДолжностьНачальнОТК" Тогда 
				Возврат Сотрудник.Должность.Наименование;
			ИначеЕсли ПараметрДолжность = "ДолжностьЗаведующийЛабораторией" Тогда
				Возврат Сотрудник.Должность.Наименование;
			КонецЕсли;
       	КонецЕсли;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Представление =  "Паспорт № " + Данные.Номер + " от "+ Формат(Данные.Дата,"ДФ=dd.MM.yyyy");	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов



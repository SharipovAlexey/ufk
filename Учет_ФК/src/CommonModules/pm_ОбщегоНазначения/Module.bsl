Функция ПолучитьПредставлениеДоговораКонтрагента(СсылкаНаДоговор, ВыводитьНаименование = Ложь) Экспорт 
	Если СсылкаНаДоговор.Пустая() Тогда 
		Возврат "";
	КонецЕсли;
	
	Если ВыводитьНаименование Тогда 
		Возврат СокрЛП(СсылкаНаДоговор.наименование) + " № "+ СокрЛП(СсылкаНаДоговор.НомерДоговора) + " от "+ Формат(СсылкаНаДоговор.ДатаДоговора,"ДФ='dd.MM.yyyy ""г.""'");
	Иначе
		Возврат "№ "+ СокрЛП(СсылкаНаДоговор.НомерДоговора) + " от "+ Формат(СсылкаНаДоговор.ДатаДоговора,"ДФ='dd.MM.yyyy ""г.""'");
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеЮрЛица(СсылкаНаОбъект) Экспорт
	
	СтДанныхПредставления = Новый Структура;
	СтДанныхПредставления.Вставить("НаименованиеПолное","");
	СтДанныхПредставления.Вставить("ИНН","");
	СтДанныхПредставления.Вставить("КПП","");
	СтДанныхПредставления.Вставить("ДатаРегистрации","");
	СтДанныхПредставления.Вставить("КодПоОКПО","");
	СтДанныхПредставления.Вставить("ОГРН","");
	СтДанныхПредставления.Вставить("ОКВЭД","");
	СтДанныхПредставления.Вставить("ЮридическийАдрес","");
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Организации") Тогда
		ИмяТаблицы = "Организации";
		ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяТаблицы = "Контрагенты";
		ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	Иначе
		Возврат "";		
	КонецЕсли;
	СтДанныхПредставления.ЮридическийАдрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(СсылкаНаОбъект,ВидКонтактнойИнформации,,,);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОбъекта.Наименование КАК Наименование,
		|	ТаблицаОбъекта.КПП КАК КПП,
		|	ТаблицаОбъекта.ИНН КАК ИНН,
		|	ТаблицаОбъекта.ДатаРегистрации КАК ДатаРегистрации,
		|	ТаблицаОбъекта.КодПоОКПО КАК КодПоОКПО,
		|	ТаблицаОбъекта.НаименованиеПолное КАК НаименованиеПолное,
		|	ТаблицаОбъекта.ОГРН КАК ОГРН,
		|	ТаблицаОбъекта.ОКВЭД КАК ОКВЭД
		|ИЗ
		|	Справочник."+ИмяТаблицы+" КАК ТаблицаОбъекта
		|ГДЕ
		|	ТаблицаОбъекта.Ссылка = &СсылкаНаОбъект";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект",СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтДанныхПредставления,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	
	СтрокаПредставления = СокрЛП(СтДанныхПредставления.НаименованиеПолное)
	+ " " + СокрЛП(СтДанныхПредставления.ЮридическийАдрес)
	+ " ИНН: " + СокрЛП(СтДанныхПредставления.ИНН)
	+ " КПП: " + СокрЛП(СтДанныхПредставления.КПП)
	+ " ОГРН: " + СокрЛП(СтДанныхПредставления.ОГРН)
	+ " ОКВЭД: " + СокрЛП(СтДанныхПредставления.ОКВЭД);
	
	Возврат СокрЛП(СтрокаПредставления);
КонецФункции

Функция ОписаниеОрганизации(СсылкаНаОбъект, Список = "", СПрефиксом = Истина) Экспорт
	
	Перем Префикс, СтрокаДополнения;

	Результат = Новый Массив;

	Если ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Организации") Тогда
		ИмяТаблицы = "Организации";
		ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Контрагенты") Тогда
		ИмяТаблицы = "Контрагенты";
		ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	Иначе
		Возврат "";		
	КонецЕсли;
		
	СписокСведений = Новый Структура;
	СписокСведений.Вставить("НаименованиеПолное",		СсылкаНаОбъект.НаименованиеПолное);
	Если ИмяТаблицы = "Организации" Тогда
		СписокСведений.Вставить("НаименованиеСокращенное",	СсылкаНаОбъект.НаименованиеСокращенное);
	КонецЕсли;
	СписокСведений.Вставить("ИНН",						СсылкаНаОбъект.ИНН);
	СписокСведений.Вставить("КПП",						СсылкаНаОбъект.КПП);
	СписокСведений.Вставить("ЮридическийАдрес",			УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(СсылкаНаОбъект,ВидКонтактнойИнформации,,,));
	
	СоответствиеПараметров = Новый Структура;
	СоответствиеПараметров.Вставить("НаименованиеПолное",			" ");
	Если ИмяТаблицы = "Организации" Тогда
		СоответствиеПараметров.Вставить("НаименованиеСокращенное",		" ");
	КонецЕсли;
	СоответствиеПараметров.Вставить("ИНН",							" ИНН ");
	СоответствиеПараметров.Вставить("КПП",							" КПП ");
	СоответствиеПараметров.Вставить("ЮридическийАдрес",				" ");
		
	Если ПустаяСтрока(Список) Тогда
		Если ИмяТаблицы = "Организации" Тогда
			Список = "НаименованиеПолное,НаименованиеСокращенное,ИНН,КПП,ЮридическийАдрес";
		Иначе 
			Список = "НаименованиеПолное,ИНН,КПП,ЮридическийАдрес";
		КонецЕсли;
	КонецЕсли;
	
	СписокПараметров = СтрРазделить(Список, ",", Ложь);
	
	Для каждого ИмяПараметра Из СписокПараметров Цикл
		
		Если СписокСведений.Свойство(ИмяПараметра, СтрокаДополнения) Тогда
			
			СписокСведений.Свойство(ИмяПараметра, СтрокаДополнения);
			Если ПустаяСтрока(СтрокаДополнения) Тогда
				Продолжить;
			КонецЕсли;
			
			Если СПрефиксом = Истина И СоответствиеПараметров.Свойство(ИмяПараметра, Префикс) Тогда
				Результат.Добавить(Префикс + СтрокаДополнения);
			Иначе
				Результат.Добавить(СтрокаДополнения);
			КонецЕсли; 
			
		Иначе
			
			ТекстСообщения = НСТр("ru = 'Не удалось определить значение параметра организации:'") + " " + ИмяПараметра;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Формирование сведений об организации'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.Организации,, 
				ТекстСообщения + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		КонецЕсли;;
		
	КонецЦикла; 

	СтрокаРезультата = СтрСоединить(Результат, ",");
	
	Пока СтрНайти(СтрокаРезультата, "  ") > 0 Цикл
		СтрокаРезультата = СтрЗаменить(СтрокаРезультата, "  ", " ");
	КонецЦикла;
	
	Возврат СокрЛП(СтрокаРезультата);

КонецФункции
	
Функция НомерНаПечать(ИсходныйНомер) Экспорт 
	Номер = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ИсходныйНомер, "0");
	Возврат Номер;
КонецФункции

Функция ПолучитьДанныеТранспортировочногоМеста(ТранспортировочноеМестоСсылка) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЗатаркиТранспортировочныхМест.Партия КАК ПартияПродукции,
		|	ДанныеЗатаркиТранспортировочныхМест.ВесБруттоВлажный КАК ВесБруттоВлажный,
		|	ДанныеЗатаркиТранспортировочныхМест.ВесНеттоВлажный КАК ВесНеттоВлажный,
		|	ДанныеЗатаркиТранспортировочныхМест.НомерПломбы КАК НомерПломбы,
		|	ДанныеЗатаркиТранспортировочныхМест.Влажность КАК Влажность,
		|	ДанныеЗатаркиТранспортировочныхМест.НомерМеста КАК НомерМестаВПартии
		|ИЗ
		|	РегистрСведений.ДанныеЗатаркиТранспортировочныхМест КАК ДанныеЗатаркиТранспортировочныхМест
		|ГДЕ
		|	ДанныеЗатаркиТранспортировочныхМест.ТранспортировочноеМесто = &ТранспортировочноеМесто";
	
	Запрос.УстановитьПараметр("ТранспортировочноеМесто", ТранспортировочноеМестоСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтрукутраДанных = Новый Структура;
	СтрукутраДанных.Вставить("ПартияПродукции",			Справочники.ПартииПродукции.ПустаяСсылка());
	СтрукутраДанных.Вставить("НомерМестаВПартии",		0);
	СтрукутраДанных.Вставить("Влажность",		0);
	СтрукутраДанных.Вставить("НомерПломбы",		"");
	СтрукутраДанных.Вставить("ВесНеттоВлажный",	0);
	СтрукутраДанных.Вставить("ВесБруттоВлажный",0);
	СтрукутраДанных.Вставить("ВесНеттоСухой",	0);
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ЗаполнитьЗначенияСвойств(СтрукутраДанных	,ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	Возврат СтрукутраДанных;
	
КонецФункции
